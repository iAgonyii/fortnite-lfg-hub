
using DataLayer;
using DataLayerDTO;
using DataLayerInterface;
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;

namespace BusinessLayer.Logic
{
    public class AchievementLogic
    {

        private readonly IAchievementCommands achievementCommands = new AchievementCommands();
        public void UpdateProfileAchievements(List<Achievement> achievements, int id)
        {

            // The method removes the empty achievements from the list if there are any, that were generated by the viewmodel.
            // Se we dont have to execute the command if there are no achievements.
            List<AchievementDTO> dtos = achievementsToDtos(achievements);
            List<string> flairs = flairsForAchievements(achievements);
            if (dtos.Count > 0)
            {
                achievementCommands.UpdateAchievements(dtos, flairs, id);
            }
        }

        private List<AchievementDTO> achievementsToDtos(List<Achievement> achievements)
        {
            List<AchievementDTO> dtos = new List<AchievementDTO>();
            foreach (Achievement achievement in achievements)
            {
                if (achievement.Rank != null && achievement.Event != Events._)
                {
                    dtos.Add(new AchievementDTO() { Rank = Convert.ToInt32(achievement.Rank), Event = achievement.Event.ToString() });
                }
            }
            return dtos;
        }

        private List<string> flairsForAchievements(List<Achievement> achievements)
        {
            List<Events> lanEvents = Enum.GetValues(typeof(Events)).Cast<Events>().ToList().Where(e => e.ToString().Contains("LAN")).ToList();
            List<Events> fncsHeatEvents = Enum.GetValues(typeof(Events)).Cast<Events>().ToList().Where(e => e.ToString().Contains("Champion_Series_Heats")).ToList();
            List<Events> fncsGrandFinalEvents = Enum.GetValues(typeof(Events)).Cast<Events>().ToList().Where(e => e.ToString().Contains("Champion_Series_Grand_Finals")).ToList();
            HashSet<string> flairs = new HashSet<string>();
            foreach (Achievement achv in achievements)
            {
                if (lanEvents.Contains(achv.Event))
                {
                    flairs.Add(Flairs.LAN_Experience.ToString());
                }
                else if (fncsHeatEvents.Contains(achv.Event))
                {
                    flairs.Add(Flairs.FNCS_Heats.ToString());
                }
                else if (fncsGrandFinalEvents.Contains(achv.Event))
                {
                    flairs.Add(Flairs.FNCS_Grand_Finals.ToString());
                }
                else if (achv.Rank <= 1000 && achv.Rank >= 501)
                {
                    flairs.Add(Flairs.Top_1000.ToString());
                }
                else if (achv.Rank <= 500 && achv.Rank >= 251)
                {
                    flairs.Add(Flairs.Top_500.ToString());
                }
                else if (achv.Rank <= 250 && achv.Rank >= 151)
                {
                    flairs.Add(Flairs.Top_250.ToString());
                }
                else if (achv.Rank <= 150 && achv.Rank >= 101)
                {
                    flairs.Add(Flairs.Top_150.ToString());
                }
                else if (achv.Rank <= 100 && achv.Rank >= 51)
                {
                    flairs.Add(Flairs.Top_100.ToString());
                }
                else if (achv.Rank <= 50 && achv.Rank >= 26)
                {
                    flairs.Add(Flairs.Top_50.ToString());
                }
                else if (achv.Rank <= 25 && achv.Rank >= 1)
                {
                    flairs.Add(Flairs.Top_25.ToString());
                }
            }
            List<string> flairsList = flairs.ToList();
            return flairsList;

        }
    }
}
